pragma solidity ^0.8.0;

contract MyContract {
// Sözleşmeyle etkileşime girmesine izin verilen adres dizisi    address[] public authorizedAddresses;

// Sözleşmeyle etkileşime girmesine izin verilen adres dizisi    mapping(address => uint256) public balanceOf;
    
// Aktarım yapıldığında yayınlanacak olay    event Transfer(address from, address to, uint256 value);
    
// AuthorizedAddresses dizisine bir adres ekleme işlevi    function addAuthorizedAddress(address _address) public {
        require(msg.sender == owner); // Only the contract owner can add addresses
        authorizedAddresses.push(_address);
    }
    
    // Function to transfer tokens
    function transfer(address _to, uint256 _value) public {
        require(authorizedAddresses[msg.sender] == true); // Only authorized addresses can transfer
        require(_value > 0);
        require(balanceOf[msg.sender] >= _value); // Check sender has enough balance
        balanceOf[msg.sender] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(msg.sender, _to, _value);
    }
}
